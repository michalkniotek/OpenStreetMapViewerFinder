// Generated by CoffeeScript 1.10.0
/*
  Tworzy funkcję która nie pozwoli uruchomić się częściej niż co {time} ms.
  Jeśli próby będą zbyt częste, tylko ostatnie wołanie zostanie wykonane

  przykład:
  slowFunc = ((a)-> console.log a).slowly(500)

  slowFunc(4)
  slowFunc(5)
  slowFunc(6)
  slowFunc(7)
  slowFunc(8)
  slowFunc(9)
  slowFunc(10)

  efekt: w konsoli zostanie wyświetlona wyłacznie liczba 10
 */

Function.prototype.slowly = function(time, maxStack) {
  var currentStack, delayKeeper, original;
  original = this;
  delayKeeper = null;
  currentStack = 0;
  return function() {
    var callargs, run;
    callargs = arguments;
    currentStack++;
    if (delayKeeper) {
      clearTimeout(delayKeeper);
    }
    run = (function(_this) {
      return function() {
        currentStack = 0;
        delayKeeper = null;
        return original.apply(_this, callargs);
      };
    })(this);
    if (!maxStack || currentStack < maxStack) {
      return delayKeeper = setTimeout(run, time);
    } else {
      return run();
    }
  };
};
