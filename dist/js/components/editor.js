'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Generated by CoffeeScript 1.10.0
require('../common/common');
var React = require('react');
var $ = require('jquery');
var viewerComponent = require('./viewer').default;

var defaultCoordinates, mapowanieKoordynat, step;
step = 0.002;
mapowanieKoordynat = {
  x1: 'X1 - longitude west',
  x2: 'X2 - longitude east',
  x3: 'X3 - longitude marker',
  y1: 'Y1 - latitude south',
  y2: 'Y2 - latitude north',
  y3: 'Y3 - latitude marker'
};
defaultCoordinates = {
  x1: 0.0,
  x2: 0.0,
  x3: 0.0,
  y1: 0.0,
  y2: 0.0,
  y3: 0.0
};

exports.default = React.createClass({
  displayName: 'openStreetMapEditor',
  getDefaultProps: function getDefaultProps() {
    return {
      coordinates: defaultCoordinates,
      size: {
        width: 425,
        height: 350
      },
      address: ''
    };
  },
  getInitialState: function getInitialState() {
    return {
      address: this.props.address,
      coordinates: this.props.coordinates,
      searchResults: null,
      viewCoordinates: this.props.coordinates,
      texts: {
        brakWynikowWyszukiwania: "No results",
        bladOdpowiedziNominatim: "No response from Nominatim server",
        wyczyscCoordynaty: "Clear coordinates",
        szukaj: "Search"
      }
    };
  },
  getResultsByAddress: function getResultsByAddress() {
    return $.ajax({
      url: 'https://nominatim.openstreetmap.org/search.php',
      dataType: 'json',
      data: {
        q: this.state.address,
        format: 'json'
      },
      timeout: 5000,
      success: (function (_this) {
        return function (data) {
          if (data.length) {
            return _this.setState({
              searchResults: data.map(function (obj) {
                return {
                  displayName: obj.display_name,
                  coordinates: {
                    x1: obj.boundingbox[2],
                    x2: obj.boundingbox[3],
                    x3: obj.lon,
                    y1: obj.boundingbox[0],
                    y2: obj.boundingbox[1],
                    y3: obj.lat
                  }
                };
              })
            });
          } else {
            _this.setState({
              searchResults: []
            });
            return alert(_this.state.texts.brakWynikowWyszukiwania);
          }
        };
      })(this),
      error: (function (_this) {
        return function () {
          _this.setState({
            searchResults: []
          });
          return alert(_this.state.texts.bladOdpowiedziNominatim);
        };
      })(this)
    });
  },
  updateViewCoords: (function (newCoordinates) {
    return this.setState({
      viewCoordinates: newCoordinates
    });
  }).slowly(500),
  updateCoordinate: function updateCoordinate(name, value) {
    var coordinates, newCoordinates;
    coordinates = this.state.coordinates;
    newCoordinates = Object.clone(coordinates);
    newCoordinates[name] = value;
    return this.updateCoordinates(newCoordinates);
  },
  updateCoordinates: function updateCoordinates(coordinates) {
    this.setState({
      coordinates: coordinates
    });
    return this.updateViewCoords(coordinates);
  },
  componentDidMount: function componentDidMount() {
    return this.componentDidUpdate();
  },
  componentDidUpdate: function componentDidUpdate() {
    return this.props.onUpdate(this.state.coordinates);
  },
  render: function render() {
    var a, button, div, i, input, label, li, ref, span;
    ref = React.DOM, div = ref.div, input = ref.input, a = ref.a, li = ref.li, label = ref.label, i = ref.i, span = ref.span;
    button = (function (_this) {
      return function (attr, zawartosc) {
        var newAttr;
        newAttr = Object.merge({
          href: "#!",
          className: 'btn btn-default'
        }, attr);
        return a(newAttr, zawartosc);
      };
    })(this);
    return div(null, div({
      className: 'well well-small'
    }, div({
      className: "input-group"
    }, input({
      className: "form-control",
      value: this.state.address,
      onChange: (function (_this) {
        return function (e) {
          return _this.setState({
            address: e.target.value
          });
        };
      })(this)
    }), span({
      className: "input-group-btn"
    }, button({
      ref: 'searchButton',
      className: "btn btn-default ladda-button",
      "data-style": "slide-right",
      onClick: (function (_this) {
        return function () {
          var searchButton;
          searchButton = $(_this.refs['searchButton'].getDOMNode());
          return _this.getResultsByAddress().always((function () {
            var ref1;
            return (ref1 = searchButton.data('ladda')) != null ? ref1.stop() : void 0;
          }).slowly(200));
        };
      })(this)
    }, span({
      className: "ladda-label"
    }, this.state.texts.szukaj)))), div(null, (function () {
      var ref1, ref2;
      switch (false) {
        case !((ref1 = this.state.searchResults) != null ? ref1.length : void 0):
        case this.state.searchResults !== null:
          return div({
            className: "list-group"
          }, (ref2 = this.state.searchResults) != null ? ref2.map((function (_this) {
            return function (result, index) {
              return a({
                key: index,
                className: "list-group-item",
                href: "#!",
                onClick: function onClick() {
                  return _this.updateCoordinates(result.coordinates);
                }
              }, result.displayName);
            };
          })(this)) : void 0);
        case !this.state.searchResults:
          return div({
            className: "alert alert-warning",
            role: "alert"
          }, this.state.texts.brakWynikowWyszukiwania);
      }
    }).call(this), div(null, button({
      onClick: (function (_this) {
        return function () {
          return _this.updateCoordinates(defaultCoordinates);
        };
      })(this)
    }, this.state.texts.wyczyscCoordynaty)), div({
      className: "list-group"
    }, Object.keys(this.state.coordinates).map((function (_this) {
      return function (name) {
        return li({
          className: "list-group-item",
          key: name
        }, label(null, mapowanieKoordynat[name]), div({
          className: "input-group"
        }, input({
          className: "form-control",
          value: _this.state.coordinates[name],
          onChange: function onChange(e) {
            if (e.target.value.match(/^\d+(\.)?(\d+)?$/)) {
              return _this.updateCoordinate(name, e.target.value);
            }
          }
        }), span({
          className: "input-group-btn"
        }, button({
          onClick: function onClick() {
            return _this.updateCoordinate(name, parseFloat(_this.state.coordinates[name]) - step);
          }
        }, i({
          className: "glyphicon glyphicon-minus"
        })), button({
          onClick: function onClick() {
            return _this.updateCoordinate(name, parseFloat(_this.state.coordinates[name]) + step);
          }
        }, i({
          className: "glyphicon glyphicon-plus"
        })))));
      };
    })(this))))), React.createElement(viewerComponent, {
      coordinates: this.state.viewCoordinates,
      size: this.props.size
    }));
  }
});
//# sourceMappingURL=data:application/json;base64,
